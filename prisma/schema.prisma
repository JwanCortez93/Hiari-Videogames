generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(uuid())
  name                String?
  last_name           String?
  username            String       @unique
  email               String       @unique
  password            String
  isAdmin             Boolean      @default(false)
  createdVideogames   Videogames[] @relation("CreatedVideogames")
  favouriteVideogames Videogames[] @relation("FavouriteVideogames")
  wishlistVideogames  Videogames[] @relation("WishlistVideogames")
  preferences         Preferences? @relation(fields: [preferencesId], references: [id])
  preferencesId       Int?
  options             Options?     @relation(fields: [optionsId], references: [id])
  optionsId           Int?
}

model Preferences {
  id           Int         @id @default(autoincrement())
  genres       Genre[]
  platforms    Platform[]
  developers   Developer[]
  publisher    Publisher[]
  tags         Tag[]
  stores       Store[]
  users        User[]
  genreId      String
  ESRBRating   ESRBRating? @relation(fields: [eSRBRatingId], references: [id])
  eSRBRatingId String?
}

model Options {
  id            Int          @id @default(autoincrement())
  users         User[]
  theme         Theme
  language      Language
  notifications Notification
}

enum Notification {
  all
}

enum Language {
  spanish
  english
  german
  italian
  french
}

enum Theme {
  dark
  light
  red
  blue
  green
}

model Videogames {
  id                          String                @id @default(uuid())
  name                        String
  slug                        String                @unique
  description                 String?
  description_raw             String
  metacritic                  Float?
  metacritic_platforms        MetacriticPlatforms[]
  released                    String?
  tba                         Boolean               @default(false)
  background_image            String
  background_image_additional String?
  short_screenshots           Screenshots[]
  rating                      Float?
  playtime                    Float?
  dominant_color              String?
  platforms                   Platform[]
  stores                      Store[]
  developer                   Developer[]
  genres                      Genre[]
  tags                        Tag[]
  publisher                   Publisher[]
  esrb_rating                 ESRBRating[]
  created_by                  User[]                @relation("CreatedVideogames")
  favourited_by               User[]                @relation("FavouriteVideogames")
  wishlisted_by               User[]                @relation("WishlistVideogames")
}

model Screenshots {
  id           Int         @id @default(autoincrement())
  image        String
  videogames   Videogames? @relation(fields: [videogamesId], references: [id])
  videogamesId String?
}

model MetacriticPlatforms {
  id         String       @id @default(uuid())
  videogames Videogames[]
}

model Platform {
  id                       String        @id @default(uuid())
  name                     String        @unique
  slug                     String        @unique
  year_start               Int?
  games_count              Int?
  min_requirements         String?
  recommended_requirements String?
  videogames               Videogames[]
  Preferences              Preferences[]
  preferencesId            Int?
}

model Store {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  games_count Int?
  videogames  Videogames[]
  Preferences Preferences[]
}

model Developer {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  games_count Int?
  videogames  Videogames[]
  Preferences Preferences[]
}

model Genre {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  games_count Int?
  videogames  Videogames[]
  Preferences Preferences[]
}

model Tag {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  games_count Int?
  videogames  Videogames[]
  Preferences Preferences[]
}

model Publisher {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  games_count Int?
  videogames  Videogames[]
  Preferences Preferences[]
}

model ESRBRating {
  id          String        @id @default(uuid())
  name        String        @unique
  slug        String        @unique
  videogames  Videogames[]
  Preferences Preferences[]
}
